Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.

Example:

Input: 38
Output: 2 
Explanation: The process is like: 3 + 8 = 11, 1 + 1 = 2. 
             Since 2 has only one digit, return it.
Follow up:
Could you do it without any loop/recursion in O(1) runtime?

/**
 * @param {number} num
 * @return {number}
 */

addDigits = (num) => {
    let sum = 0;
    
    if(num < 10){
        return num
    } else {
        // split num to an array
        let arr = num.toString().split('').map(Number)
        // calculate sum of the array
        sum = arr.reduce((a,b) => a + b, 0)
        // check if sum has more than one digit
        return sum < 10? sum : addDigits(sum);
    }
};