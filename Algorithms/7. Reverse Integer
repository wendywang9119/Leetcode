Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [âˆ’231,  231 âˆ’ 1]. 
For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.

/**
 * @param {number} x
 * @return {number}
 */
var reverse = x => {
    // spilt num to an array and reverse it
    let arr = x.toString().split("").reverse();
    // check if result is negative num
    let result;
    x < 0? ( arr.pop(), result = -Number(arr.join(""))) : (result = Number(arr.join("")))
    
    //check if the result is in the right range
    let max = Math.pow(2, 31) - 1;
    let min = Math.pow(-2, 31);
    return result > max || result < min? 0:result;
};